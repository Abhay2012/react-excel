{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","values","setValues","onChange","ev","newValues","target","name","value","className","onClick","csvContent","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+NAAe,I,YCyCAA,MArCf,WAAgB,IAAD,EACeC,IAAMC,SAAS,IAD9B,mBACNC,EADM,KACEC,EADF,KAGb,SAASC,EAASC,GAChB,IAAMC,EAAS,YAAOJ,GACtBI,EAAUD,EAAGE,OAAOC,KAAO,GAAKH,EAAGE,OAAOE,MAC1CN,EAAUG,GAgBZ,OACE,sBAAKI,UAAU,MAAf,UACE,gCACE,uBAAOF,KAAK,IAAIJ,SAAUA,EAAUK,MAAOP,EAAO,KAClD,uBAAOM,KAAK,IAAIJ,SAAUA,EAAUK,MAAOP,EAAO,QAEpD,gCACE,uBAAOM,KAAK,IAAIJ,SAAUA,EAAUK,MAAOP,EAAO,KAClD,uBAAOM,KAAK,IAAIJ,SAAUA,EAAUK,MAAOP,EAAO,QAEpD,wBAAQS,QAvBZ,WACE,IAAIC,EAAa,yCAEdV,EAAO,GAFO,YAEDA,EAAO,GAFN,aAEaA,EAAO,GAFpB,YAE0BA,EAAO,IAC9CW,EAAaC,UAAUF,GACvBG,EAAOC,SAASC,cAAc,KAClCF,EAAKG,aAAa,OAAQL,GAC1BE,EAAKG,aAAa,WAAY,eAC9BF,SAASG,KAAKC,YAAYL,GAE1BA,EAAKM,SAaH,wBCxBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BZ,M","file":"static/js/main.69504a61.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\n\nfunction App() {\n  const [values, setValues] = React.useState([]);\n\n  function onChange(ev) {\n    const newValues = [...values];\n    newValues[ev.target.name - 1] = ev.target.value;\n    setValues(newValues);\n  }\n\n  function submit() {\n    let csvContent = \"data:text/csv;charset=utf-8,\" \n    + \n    `${values[0]},${values[1]}\\n${values[2]},${values[3]}`\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"my_data.csv\");\n    document.body.appendChild(link); // Required for FF\n\n    link.click(); // This will download the data file named \"my_data.csv\".\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input name=\"1\" onChange={onChange} value={values[0]} />\n        <input name=\"2\" onChange={onChange} value={values[1]} />\n      </div>\n      <div>\n        <input name=\"3\" onChange={onChange} value={values[2]} />\n        <input name=\"4\" onChange={onChange} value={values[3]} />\n      </div>\n      <button onClick={submit}>Submit</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}